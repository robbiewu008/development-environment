# install tensorflow package
# https://www.tensorflow.org/install/install_linux

sudo apt-get install python-pip python-dev

sudo pip install -U tensorflow-gpu

python -c 'import os; import inspect; import tensorflow; print(os.path.dirname(inspect.getfile(tensorflow)))'

python -c 'import tensorflow as tf;hello = tf.constant("Hello");sess = tf.Session();print(sess.run(hello))'

# install bazel
sudo apt-get install openjdk-8-jdk pkg-config zip g++ zlib1g-dev unzip

# https://github.com/bazelbuild/bazel/releases

chmod +x bazel-0.6.1-without-jdk-installer-linux-x86_64.sh

./bazel-0.6.1-without-jdk-installer-linux-x86_64.sh --prefix=$HOME/software/bazel-0.6.1

cat >> ~/.bash_profile <<"EOF"
export BAZEL_HOME=$HOME/software/bazel-0.6.1
export PATH=$BAZEL_HOME/bin:$PATH
export PYTHON_BIN_PATH=/usr/bin/python
EOF

source ~/.bash_profile

# build tensorflow from source
# https://www.tensorflow.org/install/install_sources

sudo apt-get install python-dev python-pip

sudo pip install -U six numpy wheel

git clone -b r1.3 https://github.com/tensorflow/tensorflow tensorflow-1.3

cd tensorflow-1.3 && ./configure

# CUDA support: yes
# CUDA SDK version: 8.0
# Cudnn version: 6

bazel build --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --config=opt --config=cuda \
  //tensorflow/tools/pip_package:build_pip_package

bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg

sudo pip install /tmp/tensorflow_pkg/tensorflow-1.3.0-py2-none-any.whl

# build models from source

sudo apt-get install swig graphviz libgraphviz-dev

sudo pip install -U protobuf mock asciitree numpy

sudo pip install pygraphviz \
  --install-option="--include-path=/usr/include/graphviz" \
  --install-option="--library-path=/usr/lib/graphviz/"

git clone --recursive -b master https://github.com/tensorflow/models.git

cd models/research/syntaxnet/tensorflow

bazel clean --expunge_async

export TF_NEED_CUDA=1

export TF_CUDA_VERSION=8.0

export TF_CUDNN_VERSION=6

./configure

# CUDA support: yes
# CUDA SDK version: 8.0
# Cudnn version: 6

cd ..

sed -i '1s/^/build --config=cuda\n/' tools/bazel.rc

cp syntaxnet/syntaxnet.bzl syntaxnet/syntaxnet.bzl.bak

sed -i "s/\"\/\/conditions\:default\"\: if_false/\"\/\/conditions\:default\"\: if_true/g" \
  syntaxnet/syntaxnet.bzl

cp tensorflow/third_party/gpus/cuda/build_defs.bzl.tpl \
  tensorflow/third_party/gpus/cuda/build_defs.bzl.tpl.bak

sed -i "s/\"\/\/conditions\:default\"\: if_false/\"\/\/conditions\:default\"\: if_true/g" \
  tensorflow/third_party/gpus/cuda/build_defs.bzl.tpl

cp tensorflow/third_party/gpus/crosstool/CROSSTOOL.tpl \
  tensorflow/third_party/gpus/crosstool/CROSSTOOL.tpl.bak

sed -i "s/\%{cuda_include_path}/\/usr\/local\/cuda\/include/g" \
  tensorflow/third_party/gpus/crosstool/CROSSTOOL.tpl

cp tensorflow/tensorflow/contrib/BUILD tensorflow/tensorflow/contrib/BUILD.bak

sed -i "s/\(.*nccl.*\)/# \1/g" tensorflow/tensorflow/contrib/BUILD

bazel test --cxxopt="-D_GLIBCXX_USE_CXX11_ABI=0" --config=opt \
  --config=cuda --define using_cuda_nvcc=true --define using_gcudacc=true \ 
  dragnn/... syntaxnet/... util/utf8/...

mkdir /tmp/syntaxnet_pkg

bazel-bin/dragnn/tools/build_pip_package --output-dir=/tmp/syntaxnet_pkg

sudo pip install /tmp/syntaxnet_pkg/syntaxnet-0.2-cp27-cp27mu-linux_x86_64.whl

chmod +x syntaxnet/demo.sh

echo 'Bob brought the pizza to Alice.' | syntaxnet/demo.sh

wget http://download.tensorflow.org/models/parsey_universal/Chinese.zip

unzip Chinese.zip

mkdir -p /data/tensorflow/models

cp -r Chinese /data/tensorflow/models

MODEL_DIRECTORY=/data/tensorflow/models/Chinese

echo '马云和王健林在2016年一起投资了哪些公司' | \
  syntaxnet/models/parsey_universal/tokenize_zh.sh $MODEL_DIRECTORY | \
  syntaxnet/models/parsey_universal/parse.sh $MODEL_DIRECTORY

